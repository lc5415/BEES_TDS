<<<<<<< HEAD
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28), y = 2.8,
label = paste0("Bonferroni\nadjusted\n\nsignificance level:\np =",
round(0.05/28,4)),
hjust = -.2, vjust = 1)+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
geom_point()+
geom_label_repel()+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28), y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance level:\np =",
round(0.05/28,4)),
hjust = -.2, vjust = 1)+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
geom_point()+
geom_label_repel()+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28), y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel:\np =",
round(0.05/28,4)),
hjust = -.2, vjust = 1)+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
geom_point()+
geom_label_repel()+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28), y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel:p =",
round(0.05/28,4)),
hjust = -.2, vjust = 1)+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
geom_point()+
geom_label_repel()+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28), y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel:p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
geom_point()+
geom_label_repel()+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+0.2, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel:p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
geom_point()+
geom_label_repel()+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28+0.2), y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel:p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
geom_point()+
geom_label_repel()+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28-0.2), y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel:p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
geom_point()+
geom_label_repel()+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)-0.2, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel:p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
geom_point()+
geom_label_repel()+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)-0.5, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel:p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
geom_point()+
geom_label_repel()+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)-1, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel:p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
=======
as.character(Country.Region),
as.character(Province.State))) %>% select(-Active) %>%
head(20) %>%
pivot_longer(-c(Country.Region, Province.State, Continent), names_to = "Metric", values_to = "Amount") %>%
ggplot(aes(x = reorder(Province.State, Amount), y = Amount, fill = Continent))+
geom_col(color = 'black')+
facet_wrap(~Metric)+coord_flip()+theme_minimal())
plot1
plot2 = ggplotly(sum.table %>%
mutate(Province.State = ifelse(Province.State == "",
as.character(Country.Region),
as.character(Province.State))) %>% select(-Active) %>%
head(20) %>%
pivot_longer(-c(Country.Region, Province.State, Continent), names_to = "Metric", values_to = "Amount") %>%
ggplot(aes(x = reorder(Province.State, Amount), y = Amount))+
geom_col(aes(fill = Metric), position = "identity")+coord_flip()+theme_minimal())
plot2
sum.table %>%
mutate(Province.State = ifelse(Province.State == "",
as.character(Country.Region),
as.character(Province.State))) %>%
select(-Active) %>%
head(10)%>%
ggplot(aes(area = Deaths, label = paste0(Province.State,":\n",Deaths),
fill = Continent, subgroup = Continent))+geom_treemap()+
geom_treemap_text(colour = "white", place = "topleft")+coord_fixed()+
ggtitle("Number of deaths by country\nin top 10 countries with more active cases")
sum.table %>%
mutate(Province.State = ifelse(Province.State == "",
as.character(Country.Region),
as.character(Province.State))) %>%
head(10)%>%
ggplot(aes(area = Confirmed, label = paste0(Province.State,":\n",Confirmed),
fill = Continent,subgroup = Continent))+geom_treemap()+
geom_treemap_text(colour = "white", place = "topleft")+coord_fixed()+
ggtitle("Number of confirmed cases by country\nin top 10 countries with more active cases")
sum.table = sum.table %>% mutate(Province.State = ifelse(Province.State == "",
as.character(Country.Region),
as.character(Province.State)))
plot4 <- plot_ly(
type="treemap",
values=sum.table$Deaths[1:9],
ids = sum.table$Province.State[1:9],
# labels = sum.table$Province.State[1:9],
parents=sum.table$Continent[1:9]
#values= sum.table$Deaths[1:10],
# textinfo="label+value+percent parent+percent entry+percent root",
#domain=list(column=0)
)
plot4
sum.table %>%
mutate(Province.State = ifelse(Province.State == "",
as.character(Country.Region),
as.character(Province.State))) %>%
head(10)%>%
ggplot(aes(area = Recovered, label = paste0(Province.State,": ",Recovered),
fill = Continent,subgroup = Continent))+geom_treemap()+
geom_treemap_text(colour = "white", place = "topleft")+coord_fixed()+
ggtitle("Number of recovered patients by country\nin top 10 countries with more active cases")
sum.table %>%
mutate(Province.State = ifelse(Province.State == "",
as.character(Country.Region),
as.character(Province.State))) %>%
head(10)%>%
ggplot(aes(area = Deaths/Confirmed,
label = paste0(Province.State,": ",round(Deaths/Confirmed,2)),
fill = Continent,subgroup = Continent))+geom_treemap()+
geom_treemap_text(colour = "white", place = "topleft")+coord_fixed()
sum.table = sum.table %>% mutate(Province.State = ifelse(Province.State == "",
as.character(Country.Region),
as.character(Province.State)))
plot4 <- plot_ly(
type="treemap",
values=sum.table$Deaths[1:9],
ids = sum.table$Province.State[1:9],
# labels = sum.table$Province.State[1:9],
labels=sum.table$Continent[1:9]
#values= sum.table$Deaths[1:10],
# textinfo="label+value+percent parent+percent entry+percent root",
#domain=list(column=0)
)
plot4
plot4 <- plot_ly(
type="treemap",
values=sum.table$Deaths[1:9],
parents = sum.table$Province.State[1:9],
# labels = sum.table$Province.State[1:9],
labels=sum.table$Continent[1:9]
#values= sum.table$Deaths[1:10],
# textinfo="label+value+percent parent+percent entry+percent root",
#domain=list(column=0)
)
plot4
plot4 <- plot_ly(
type="treemap",
values=sum.table$Deaths[1:9],
labels = sum.table$Province.State[1:9],
# labels = sum.table$Province.State[1:9],
parents=sum.table$Continent[1:9]
#values= sum.table$Deaths[1:10],
# textinfo="label+value+percent parent+percent entry+percent root",
#domain=list(column=0)
)
plot4
df1 = read.csv('https://raw.githubusercontent.com/plotly/datasets/718417069ead87650b90472464c7565dc8c2cb1c/sunburst-coffee-flavors-complete.csv')
fig <- plot_ly(
type='treemap',
ids=df1$ids,
labels=df1$labels,
parents=df1$parents,
domain=list(column=0))
fig
df1
df.plotly = sum.table
df.plotly
conts = df.plotly %>% group_by(Continent) %>% summarise(Deaths = sum(Deaths),
Confirmed = sum(Confirmed),
Recovered = sum(Recovered),
Active = sum(Ative)) %>%
mutate(parent = "")
conts = df.plotly %>% group_by(Continent) %>% summarise(Deaths = sum(Deaths),
Confirmed = sum(Confirmed),
Recovered = sum(Recovered),
Active = sum(Active)) %>%
mutate(parent = "")
conts
df.plotly$Continent = ifelse(is.na(df.plotly$Continent), "Missing", df.plotly$Continent)
conts = df.plotly %>% group_by(Continent) %>% summarise(Deaths = sum(Deaths),
Confirmed = sum(Confirmed),
Recovered = sum(Recovered),
Active = sum(Active)) %>%
mutate(parent = "")
conts
conts = df.plotly %>% group_by(Continent) %>% summarise(Deaths = sum(Deaths),
Confirmed = sum(Confirmed),
Recovered = sum(Recovered),
Active = sum(Active)) %>%
mutate(parent = "") %>% rename(Continent = labels)
conts = df.plotly %>% group_by(Continent) %>% summarise(Deaths = sum(Deaths),
Confirmed = sum(Confirmed),
Recovered = sum(Recovered),
Active = sum(Active)) %>%
mutate(parent = "")
conts = df.plotly %>% group_by(Continent) %>% summarise(Deaths = sum(Deaths),
Confirmed = sum(Confirmed),
Recovered = sum(Recovered),
Active = sum(Active)) %>%
mutate(parent = "") %>% rename(Continent = labels)
conts
rename(conts, Continent = label)
rename(conts, label = Continent)
conts = df.plotly %>% group_by(Continent) %>% summarise(Deaths = sum(Deaths),
Confirmed = sum(Confirmed),
Recovered = sum(Recovered),
Active = sum(Active)) %>%
mutate(parent = "") %>% rename(labels = Continent)
conts
conts
df.plotly
countrs = df.plotly %>% select(-Province.State) %>% rename(parent = Continent,
labels = Country.Region)
countrs
conts
regs = df.plotly %>% select(-Continent) %>% rename(labels = Province.State, parent = Country.Region)
regs
regs = df.plotly %>% select(-Continent) %>% rename(labels = Province.State, parent = Country.Region)
regs = df.plotly %>% ungroup() %>% select(-Continent) %>% rename(labels = Province.State, parent = Country.Region)
regs
df.plotly = rbind(conts,countrs, regs)
df.plotly
sum.table = sum.table %>% mutate(Province.State = ifelse(Province.State == "",
as.character(Country.Region),
as.character(Province.State)))
df.plotly = sum.table
df.plotly$Continent = ifelse(is.na(df.plotly$Continent), "Missing", df.plotly$Continent)
conts = df.plotly %>% group_by(Continent) %>% summarise(Deaths = sum(Deaths),
Confirmed = sum(Confirmed),
Recovered = sum(Recovered),
Active = sum(Active)) %>%
mutate(parent = "") %>% rename(labels = Continent)
countrs = df.plotly %>% select(-Province.State) %>% rename(parent = Continent,
labels = Country.Region)
regs = df.plotly %>% ungroup() %>% select(-Continent) %>% rename(labels = Province.State, parent = Country.Region)
df.plotly = rbind(conts,countrs, regs)
install.packages("ldpaths")
library(mixOmics)
?spls
?splsda
?spls
?pls
!pwd
getwd()
cluster = 0
platform = Sys.info()['sysname']
if (platform=='Linux'){
save_data = data_folder = "../FULLDATA/preprocessed/"
save_plots = "../FULLResults/"
} else {
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
save_data = data_folder = "../data/preprocessed/"
save_plots = "../results/"
}
getwd()
ls
getwd()
fig = readRDS("../FULLResults/EDA/bio_dist_impLOG.rds")
FIG
fig
fig
ls()
ls()[ls()!="fig"]
rm(list = ls()[ls()!="fig"])
data = fig$data
data %>% head
data %>% head()
library(tidyverse)
data %>% head()
data %>% spread(Biomarker)
data %>% spread(Biomarker)
data %>% spread(Biomarker, Amount)
?spread
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocksm <- stocks %>% gather(stock, price, -time)
stocksm
stocksm %>% spread(stock, price)
stocksm %>% spread(time, price)
remove(stocksm)
remove(stocks)
data[sample(1:100000,1000),] %>% spread(Biomarker, Amount)
data[sample(1:100000,1000),] %>% ungroup() %>% spread(Biomarker, Amount)
head(data)
data %>% group_by(CVD_status, Biomarker) %>% summarise(mean(Amount))
data = data %>% group_by(CVD_status, Biomarker) %>% summarise(avg = mean(Amount))
data
data = data %>% ungroup()
data
data %>% spread(Biomarker, avg)
data = data %>% spread(Biomarker, avg)
data
t(data)
data %>% gather(-CVD_status)
data %>% pivot_longer(-CVD_status)
data
data = data[2,]-data[1,]
data = as.numeric(data)
data = data[2,]-data[1,]
data
data = fig$data
data = data %>% group_by(CVD_status, Biomarker) %>% summarise(avg = mean(Amount))
data
data = data %>% spread(Biomarker, avg)
data
data = as.matrix(data)
data
data = data[2,]-data[1,]
data = t(data)
data
data = as.numeric(data)
data
data = fig$data
data = data %>% group_by(CVD_status, Biomarker) %>% summarise(avg = mean(Amount))
data = data %>% spread(Biomarker, avg)
data
data = as.data.frame(data)
data
data = data[2,]-data[1,]
str(data)
data$CVD_status = as.numeric(data$CVD_status)
data
ls
data
str(data)
data = data[-1]
data
sort(data)
sort(abs(data))
difs = data
data = fig$data
data
difs = sort(abs(difs))
difs
names(difs)
data %>% filter(Biomarker %in% difs[20:length(difs)]) %>%
ggplot(aes(x = Amount, color = CVD_status))+geom_density()+
facet_wrap(~Biomarker)
data %>% filter(Biomarker %in% difs[20:length(difs)])
data %>% filter(Biomarker %in% names(difs)[20:length(difs)])
data %>% filter(Biomarker %in% names(difs)[20:length(difs)]) %>%
+ ggplot(aes(x = Amount, color = CVD_status))+geom_density()+
+ facet_wrap(~Biomarker)
data %>% filter(Biomarker %in% names(difs)[20:length(difs)]) %>%
ggplot(aes(x = Amount, color = CVD_status))+geom_density()+
facet_wrap(~Biomarker)
data %>% filter(Biomarker %in% names(difs)[20:length(difs)]) %>%
ggplot(aes(x = log10(Amount), color = CVD_status))+geom_density()+
facet_wrap(~Biomarker)
data %>% filter(Biomarker %in% names(difs)[20:length(difs)]) %>%
ggplot(aes(x = log10(Amount), color = CVD_status))+geom_density()+
facet_wrap(~Biomarker,scales = "free_y")
data %>% filter(Biomarker %in% names(difs)[20:length(difs)]) %>%
ggplot(aes(x = log10(Amount), color = CVD_status))+geom_density()+
facet_wrap(~Biomarker,scales = "free_y")+theme_minimal()
data.plt = fig$data
remove(data.plt)
data %>% filter(Biomarker %in% names(difs)[20:length(difs)]) %>%
ggplot(aes(x = log10(Amount), color = CVD_status))+geom_density()+
facet_wrap(~Biomarker,scales = "free")+theme_minimal()
data %>% filter(Biomarker %in% names(difs)[20:length(difs)]) %>%
ggplot(aes(x = log10(Amount), color = CVD_status))+geom_density()+
facet_wrap(~Biomarker,scales = "free")+theme_minimal()+scale_color_brewer(palette = "Set1")+xlab("log10 Biomarker concentration")+ylab("Density")+labs(title = "CVD status")
data %>% filter(Biomarker %in% names(difs)[20:length(difs)]) %>%
ggplot(aes(x = log10(Amount), color = CVD_status))+geom_density()+
facet_wrap(~Biomarker,scales = "free")+theme_minimal()+scale_color_brewer(palette = "Set1")+xlab("log10 Biomarker concentration")+ylab("Density")+labs(title = element_text("CVD status"))
data %>% filter(Biomarker %in% names(difs)[20:length(difs)]) %>%
ggplot(aes(x = log10(Amount), color = CVD_status))+geom_density()+
facet_wrap(~Biomarker,scales = "free")+theme_minimal()+scale_color_brewer(palette = "Set1")+xlab("log10 Biomarker concentration")+ylab("Density")+labs(legend = element_text("CVD status"))
data %>% filter(Biomarker %in% names(difs)[20:length(difs)]) %>%
ggplot(aes(x = log10(Amount), color = CVD_status))+geom_density()+
facet_wrap(~Biomarker,scales = "free")+theme_minimal()+scale_color_brewer(palette = "Set1")+xlab("log10 Biomarker concentration")+ylab("Density")+labs(color = element_text("CVD status"))
data %>% filter(Biomarker %in% names(difs)[20:length(difs)]) %>%
ggplot(aes(x = log10(Amount), color = CVD_status))+geom_density()+
facet_wrap(~Biomarker,scales = "free")+theme_minimal()+scale_color_brewer(palette = "Set1")+xlab("log10 Biomarker concentration")+ylab("Density")+labs(color = element_text("CVD status"))+ggtitle(label = "Distribution of top biomarkers (log10 scale) by CVD status")
getwd()
devtools::install_github("lc5415/HDATDS")
devtools::install_github("lc5415/HDATDS")
library(HDATDS)
library(HDATDS)
?BHSCalculator()
library(tidyverse)
library(ggpubr)
cluster = 0
platform = Sys.info()['sysname']
if (platform=='Linux'){
save_data = data_folder = "../FULLDATA/preprocessed/"
save_plots = "../FULLResults/"
} else {
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
save_data = data_folder = "../data/preprocessed/"
save_plots = "../results/"
}
ifelse(!dir.exists(file.path(save_plots, "BHS/")), dir.create(file.path(save_plots, "BHS/")), FALSE)
save_plots = paste0(save_plots,"BHS/")
#### ADD COMPARISONS BY SUBGROUP and add some more comments
bio = readRDS(paste0(data_folder,"bioProcessed.rds"))
bio.imp = readRDS(paste0(data_folder,"bioImputedKNN.rds"))
cov = readRDS(paste0(data_folder,"covProcessed.rds"))
# bio.dict = readxl::read_xlsx("../Biomarker_annotation.xlsx")
#
# # make pretty names
# bio.dict$`Biomarker name` = make.names(bio.dict$`Biomarker name`)
# bio.dict$`Biomarker name` = sub("\\.\\.",".",
#                                 bio.dict$`Biomarker name`)
# for simplicity we merge cov and bio here
bio.imp = merge(bio.imp, cov[,c("ID","age_cl","gender")], by = "ID")
ids = bio.imp$ID # wanna keep an explicit copy od the IDs
rownames(bio.imp) = bio.imp[,1]
bio.imp = bio.imp[,-1]
bio.imp$age_cl = as.factor(bio.imp$age_cl)
bio.imp$gender = as.factor(bio.imp$gender)
BHSCalculator(bio.imp, "Mantej", T)
?BHSCalculator
source('~/OneDrive - Imperial College London/MScHDA/Term2/TDS/Project/Scripts/XGBoost_cov.R', echo=TRUE)
library(bannerCommenter)
banner("Set the data to be analysed")
banner("Run models and store results")
univtable = read_csv("../FULLResults/UnivariateAnalysis.csv")
# quick univariate plots from data
library(readr)
univtable = read_csv("../FULLResults/UnivariateAnalysis.csv")
univtable = read_csv("../FULLResults/UnivariateAnalysis.csv")
ggplot(univtable, aes(x = OR, y = p.value))+geom_point(aes(label = Biomarkers))
ggplot(univtable, aes(x = OR, y = -log10(p.value)))+geom_point(aes(label = Biomarkers))
ggplot(univtable, aes(y = OR, x = -log10(p.value)))+geom_point(aes(label = Biomarkers))
ggplot(univtable, aes(y = OR, x = -log10(p.value), color = Data))+
geom_point(aes(label = Biomarkers))
univtable %>% filter(data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value)))+
geom_point(aes(label = Biomarkers))+
geom_label()
univtable %>% filter(data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>100, Biomarkers, "")))+
geom_point()+geom_label()
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>100, Biomarkers, "")))+
geom_point()+geom_label()
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>500, Biomarkers, "")))+
geom_point()+geom_label()
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50, Biomarkers, "")))+
geom_point()+geom_label()
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50 | OR<0.5,
Biomarkers, "")))+
geom_point()+geom_label()
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse((-log10(p.value)>50 | OR<0.5),
Biomarkers, "")))+
geom_point()+geom_label()
install.packages("ggrepel")
library(ggrepel)
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse((-log10(p.value)>50 | OR<0.5),
Biomarkers, "")))+
geom_point()+geom_label_repel()
View(univtable)
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>25,
Biomarkers, "")))+
geom_point()+geom_label_repel()
View(univtable)
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>25,
Biomarkers, "")))+
geom_point()+geom_label_repel()+ylim(0,NA)
>>>>>>> 73cf77a8f96054f0c44e61450fd7b067a5946720
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
<<<<<<< HEAD
geom_point()+
geom_label_repel()+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)-10, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel:p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
geom_point()+
geom_label_repel()+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+10, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel:p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
geom_point()+
geom_label_repel()+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+5, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel:p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
=======
geom_point()+geom_label_repel()+ylim(0,NA)
library(plotly)
univtable %>% filter(Data == "KNN") %>%
ggplotly(ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
geom_point()+geom_label_repel()+ylim(0,NA))
ggplotly(univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
geom_point()+geom_label_repel()+ylim(0,NA))
>>>>>>> 73cf77a8f96054f0c44e61450fd7b067a5946720
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
<<<<<<< HEAD
geom_point()+
geom_label_repel()+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+5, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel: p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
?geom_label_repel
=======
geom_point()+geom_label_repel()+ylim(0,NA)
>>>>>>> 73cf77a8f96054f0c44e61450fd7b067a5946720
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
<<<<<<< HEAD
geom_point()+
geom_label_repel(min.segment.length = 0)+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+5, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel: p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
View(univtable)
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7|(OR>1.1 & -log10(p.value>40)),
Biomarkers, "")))+
geom_point()+
geom_label_repel(min.segment.length = 0)+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+5, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel: p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7|(OR>1.1 & -log10(p.value)>40)),
Biomarkers, ""))+
geom_point()+
geom_label_repel(min.segment.length = 0)+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+5, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel: p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
Biomarkers, ""))+
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|
OR<0.7|
(OR>1.1 & -log10(p.value)>40),
Biomarkers, "")))+
geom_point()+
geom_label_repel(min.segment.length = 0)+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+5, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel: p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|
OR<0.7|
(OR>1.1 & -log10(p.value)>40),
Biomarkers, "")))+
geom_point(fill = "black", color = "white")+
geom_label_repel(min.segment.length = 0)+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+5, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel: p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|
OR<0.7|
(OR>1.1 & -log10(p.value)>40),
Biomarkers, "")))+
geom_point(fill = "black", color = "white", shape = 22)+
geom_label_repel(min.segment.length = 0)+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+5, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel: p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|
OR<0.7|
(OR>1.1 & -log10(p.value)>40),
Biomarkers, "")))+
geom_point(fill = "black", color = "red", shape = 22)+
geom_label_repel(min.segment.length = 0)+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+5, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel: p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|
OR<0.7|
(OR>1.1 & -log10(p.value)>40),
Biomarkers, "")))+
geom_point(fill = "black", color = "red", shape = 23)+
geom_label_repel(min.segment.length = 0)+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+5, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel: p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|
OR<0.7|
(OR>1.1 & -log10(p.value)>40),
Biomarkers, "")))+
geom_point(fill = "black", color = "red", shape = 21)+
geom_label_repel(min.segment.length = 0)+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+5, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel: p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|
OR<0.7|
(OR>1.1 & -log10(p.value)>40),
Biomarkers, "")))+
geom_point(fill = "grey", color = "red", shape = 21)+
geom_label_repel(min.segment.length = 0)+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+5, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel: p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|
OR<0.7|
(OR>1.1 & -log10(p.value)>40),
Biomarkers, "")))+
geom_point(fill = "grey", color = "black", shape = 21)+
geom_label_repel(min.segment.length = 0)+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+5, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel: p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|
OR<0.7|
(OR>1.05 & -log10(p.value)>40),
Biomarkers, "")))+
geom_point(fill = "grey", color = "black", shape = 21)+
geom_label_repel(min.segment.length = 0)+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+5, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel: p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|
OR<0.7|
(OR>1.05 & -log10(p.value)>40),
Biomarkers, "")))+
geom_point(fill = "grey", color = "black", shape = 21)+
geom_label_repel(min.segment.length = 0)+
ylim(0,NA)+
theme_bw()+xlab(expression("-log10(p-value)"))+
geom_vline(xintercept = -log10(0.05/28), linetype = "dashed")+
annotate("text", x = -log10(0.05/28)+3, y = 2.8,
label = paste0("Bonferroni\nadjusted\nsignificance\nlevel: p =",
round(0.05/28,4)),
hjust = "inward", vjust = "inward")+
ylab("Odds Ratio(OR)")+theme(text = element_text(size = 16))
plt.rds = read_csv("../FULLResults/EDA/bio_dist_impLOG.rds")
pltrds = read_csv("../FULLResults/EDA/bio_dist_impLOG.rds")
pltrds = readRDS("../FULLResults/EDA/bio_dist_impLOG.rds")
data = pltrds$data
View(data)
data$Biomarker = str_replace_all(data$Biomarker, "\\.", " ")
data$Biomarker = str_replace_all(data$Biomarker, "Glycated haemoglobin HbA1c", "HbA1c")
library(stringr)
data$Biomarker = str_replace_all(data$Biomarker, "\\.", " ")
data$Biomarker = str_replace_all(data$Biomarker, "Glycated haemoglobin HbA1c", "HbA1c")
data$Biomarker = str_replace_all(data$Biomarker, "Alanine aminotransferase", "Alanine\naminotransferase")
data$Biomarker = str_replace_all(data$Biomarker, "Alkaline phosphatase", "Alkaline\nphosphatase")
class(data$CVD_status)
?relevel
data$CVD_status = revalue(data$CVD_status, c("0"="Controls", "1"="Cases") )
data$CVD_status = plyr::revalue(data$CVD_status, c("0"="Controls", "1"="Cases") )
fig = data %>%
ggplot(aes(x = log10(Amount), color = CVD_status)) +
geom_density(alpha = 0)+
facet_wrap(Biomarker~.,
scales = "free")+
#theme_minimal()+
#scale_color_brewer(palette = "Set1")+
ggtitle("Biomarker distribution for imputed data(log scaled)")
fig
fig = data %>%
ggplot(aes(x = log10(Amount), color = CVD_status)) +
geom_density(alpha = 0)+
facet_wrap(Biomarker~.,
scales = "free")+
theme_bw()+
#scale_color_brewer(palette = "Set1")+
ggtitle("Biomarker distribution for imputed data(log scaled)")
fig = data %>%
ggplot(aes(x = log10(Amount), color = CVD_status)) +
geom_density(alpha = 0)+
facet_wrap(Biomarker~.,
scales = "free")+
theme_bw()+
scale_color_brewer(palette = "Set1")+
ggtitle("Biomarker distribution for imputed data(log scaled)")
fig
library(stringr)
pltrds = readRDS("../FULLResults/EDA/bio_dist_impLOG.rds")
data = pltrds$data
data$Biomarker = str_replace_all(data$Biomarker, "\\.", " ")
data$Biomarker = str_replace_all(data$Biomarker, "Glycated haemoglobin HbA1c", "HbA1c")
# data$Biomarker = str_replace_all(data$Biomarker, "Alanine aminotransferase", "Alanine\naminotransferase")
# data$Biomarker = str_replace_all(data$Biomarker, "Alkaline phosphatase", "Alkaline\nphosphatase")
data$CVD_status = plyr::revalue(data$CVD_status, c("0"="Controls", "1"="Cases") )
fig = data %>%
ggplot(aes(x = log10(Amount), color = CVD_status)) +
geom_density(alpha = 0)+
facet_wrap(Biomarker~.,
scales = "free")+
theme_bw()+
scale_color_brewer(palette = "Set1")+
ggtitle("Biomarker distribution for imputed data(log scaled)")
fig
fig = data %>%
ggplot(aes(x = log10(Amount), color = CVD_status)) +
geom_density(alpha = 0)+
facet_wrap(Biomarker~.,
scales = "free")+
theme_bw()+
scale_color_brewer(palette = "Set1")+
ggtitle("Biomarker distribution for imputed data(log scaled)")+
labs(color = "CVD status")
pltrds = readRDS("../FULLResults/EDA/bio_dist_impLOG.rds")
data = pltrds$data
data$Biomarker = str_replace_all(data$Biomarker, "\\.", " ")
data$Biomarker = str_replace_all(data$Biomarker, "Glycated haemoglobin HbA1c", "HbA1c")
data$Biomarker = str_replace_all(data$Biomarker, "Gamma glutamyltransferase", "GGT")
data$Biomarker = str_replace_all(data$Biomarker, "Alanine aminotransferase", "Alanine aminotrans.")
data$Biomarker = str_replace_all(data$Biomarker, "Alkaline phosphatase", "Alkaline phosph.")
data$CVD_status = plyr::revalue(data$CVD_status, c("0"="Controls", "1"="Cases") )
fig = data %>%
ggplot(aes(x = log10(Amount), color = CVD_status)) +
geom_density(alpha = 0)+
facet_wrap(Biomarker~.,
scales = "free")+
theme_bw()+
scale_color_brewer(palette = "Set1")+
ggtitle("Biomarker distribution for imputed data(log scaled)")+
labs(color = "CVD status")
fig
pltrds = readRDS("../FULLResults/EDA/bio_dist_impLOG.rds")
data = pltrds$data
data$Biomarker = str_replace_all(data$Biomarker, "\\.", " ")
data$Biomarker = str_replace_all(data$Biomarker, "Glycated haemoglobin HbA1c", "HbA1c")
data$Biomarker = str_replace_all(data$Biomarker, "Gamma glutamyltransferase", "GGT")
data$Biomarker = str_replace_all(data$Biomarker, "Alanine aminotransferase", "Alanine aminotrans.")
data$Biomarker = str_replace_all(data$Biomarker, "Alkaline phosphatase", "Alkaline phosph.")
data$Biomarker = str_replace_all(data$Biomarker, "Aspartate aminotransferase", "Aspartate aminotrans.")
data$CVD_status = plyr::revalue(data$CVD_status, c("0"="Controls", "1"="Cases") )
fig = data %>%
ggplot(aes(x = log10(Amount), color = CVD_status)) +
geom_density(alpha = 0)+
facet_wrap(Biomarker~.,
scales = "free")+
theme_bw()+
scale_color_brewer(palette = "Set1")+
ggtitle("Biomarker distribution for imputed data(log scaled)")+
labs(color = "CVD status")
fig
=======
geom_point()+geom_label_repel()+ylim(0,NA)+
theme_bw()
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7|OR>1.2,
Biomarkers, "")))+
geom_point()+geom_label_repel()+ylim(0,NA)+
theme_bw()
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7|OR>1.1,
Biomarkers, "")))+
geom_point()+geom_label_repel()+ylim(0,NA)+
theme_bw()
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7|(OR>1.1 & p.value>25),
Biomarkers, "")))+
geom_point()+geom_label_repel()+ylim(0,NA)+
theme_bw()
univtable[, c("`lower CI`", "`upper CI`", "OR")]
univtable[, c(`lower CI`, `upper CI`, "OR")]
univtable[,"`lower CI`"]
univtable[,`lower CI`]
univtable %>% select(c(`lower CI`, `upper CI`, OR))
?mutate_all
univtable %>% mutate_at(c(`lower CI`, `upper CI`, OR), ~round(., 2))
colnames(univtable)[4:5] = c("lowerCI", "upperCI")
univtable %>% mutate_at(c(lowerCI, upperCI, OR), ~round(., 2))
univtable %>% mutate_at(c("lowerCI", "upperCI", "OR"), ~round(., 2))
View(univtable)
univtable[, c("lowerCI","upperCI",
"OR")] = univtable %>%
mutate_at(c("lowerCI", "upperCI", "OR"), ~round(., 2))
univtable[, c("lowerCI","upperCI", "OR")] = univtable %>%
mutate_at(c("lowerCI", "upperCI", "OR"), ~round(., 2))
univtable= univtable %>%
mutate_at(c("lowerCI", "upperCI", "OR"), ~round(., 2))
write_csv(univtable, "../FULLResults/UnivariateAnalysis.csv")
univtable = read_csv("../FULLResults/UnivariateAnalysis.csv")
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7|(OR>1.1 & p.value>25),
Biomarkers, "")))+
geom_point()+geom_label_repel()+ylim(0,NA)+
theme_bw()
univtable %>% filter(Data == "KNN") %>%
ggplot(aes(y = OR, x = -log10(p.value),
label = ifelse(-log10(p.value)>50|OR<0.7,
Biomarkers, "")))+
geom_point()+geom_label_repel()+ylim(0,NA)+
theme_bw()
univtable = read_csv("../FULLResults/UnivariateAnalysis.csv")
colnames(univtable)[4:5] = c("lowerCI", "upperCI")
View(univtable)
univtable= univtable %>%
mutate_at(c("lowerCI", "upperCI", "OR"), ~round(., 4))
write_csv(univtable, "../FULLResults/UnivariateAnalysis.csv")
>>>>>>> 73cf77a8f96054f0c44e61450fd7b067a5946720
